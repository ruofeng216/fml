#pragma once
#include <QWidget>
#include <QMouseEvent>
#include <QPixmap>
// 边界
#define PADDING 2
#define PADDING2 15

namespace Ui {
	class basic;
}
class TitleWidget;
class basicui : public QWidget
{
	Q_OBJECT

public:
	enum TitleStyle 
	{
		TS_NONE = 0,		// 无标题
		TS_CLOSE = 1<<0,	// 关闭
		TS_MAX =1<<1 ,		// 最大化,双击标题最大化，不显示最大化按钮！
		TS_MIN = 1<<2,		// 最小化
		TS_FUNC = 1<<3,		// 功能
		TS_LEFT =1<<4,		// 标题在左边
		TS_CENTER= 1<<5,	// 标题居中
		TS_LOGO =1<<6,		// LOGO
	};

	explicit basicui(QWidget *parent, QWidget *contentWidget, const QString &wndid, 
		const QString &title, int titlestyle = TS_LOGO|TS_MAX|TS_CLOSE|TS_MIN|TS_LEFT);

	virtual ~basicui();

	QString id() const;									// 唯一标示窗口的ID
	void setTitleStyle(int titlestyle);					// 设置标题样式
	void setCloseIsHide(bool isHide);					// 点击关闭按钮进行隐藏窗口
	void setForbidMove(bool forbidMove);				// 禁止窗口移动
	void setBackground(const QPixmap &bg);
	QWidget *getContentWidget() const;
	void setSize(QSize size);
	void setFrameHighlight(bool isHighlight);			// 设置背景高亮
	void forceEnableStretch();							// 强制允许拉伸，不受UI按钮影响

signals:
	void sigClose(const QString &id="", bool isExit=true);

protected:
	void paintEvent(QPaintEvent *event);
	void mousePressEvent(QMouseEvent *event);
	void mouseReleaseEvent(QMouseEvent *event);
	void mouseMoveEvent(QMouseEvent *event);
	void mouseDoubleClickEvent(QMouseEvent *event);
	void closeEvent(QCloseEvent *event);
	bool nativeEvent(const QByteArray & eventType, void * message, long * result);

	void setMaxRestoreVisible();

public Q_SLOTS:
	bool close();
	void min();
	virtual void max();

protected:
	// 鼠标所在窗口区域：上，下，左，右，左上，左下，右下，右上，中间
	enum Direction { UP=0, DOWN, LEFT, RIGHT, LEFTTOP, LEFTBOTTOM, RIGHTBOTTOM, RIGHTTOP, MIDDLE };
	// 鼠标目前的位置转换对应窗口所在区域
	void transRegion(const QPoint &cursorGlobalPoint);

	bool m_blpressdown; //鼠标按下
	
private:
	Ui::basic *m_ui;
	QString m_wndid;
	QPoint m_movepoint; //移动的距离 
	Direction m_dir;    //鼠标所在区域
	int m_titlestyle;   //标题功能按钮配置
	bool m_closeIsHide;	//点击关闭按钮隐藏窗口
	bool m_forbidMove;  //禁止窗口移动
	QWidget *m_contentWidget; // 主窗口区域
	QPixmap m_bgImage; //背景图片
	QString m_title; //标题内容
};
